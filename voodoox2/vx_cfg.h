/*
 $Id: vx_cfg.h,v 1.2 2004/01/21 17:50:52 andrewbell Exp $
 Config module definitions.

 VX - User interface for the XAD decompression library system.
 Copyright (C) 1999 and later by Andrew Bell <mechanismx@lineone.net>

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

*/

#ifndef VX_CFG_H
#define VX_CFG_H 1

#define YES "YES"
#define NO  "NO"

struct SymMap {
	UBYTE *sm_Symbol;
	ULONG  sm_Value;
};

struct ConfigTag {
	UBYTE         *ct_TagStr;
	ULONG          ct_TagData;
	LONG           ct_TagType;
	struct SymMap *ct_SymMap;
};

/* TODO: Sync up strings */

enum
{
    TAGID_END                  = -2,
    TAGID_UNKNOWN              = -1,

    /* KEEP THE FOLLOWING IN SYNC WITH CTArray[]!!! */

    TAGID_MAIN_AUTOSELECTALL   =  0,
    TAGID_MAIN_AUTOVIRUSCHECK,
    TAGID_MAIN_DEFARCHIVEPATH,
    TAGID_MAIN_DEFDESTPATH,
    TAGID_MAIN_ARCVIEWMODE,
    TAGID_MAIN_KEEPFULLPATH,
    TAGID_MAIN_TEMPPATH,
    TAGID_MAIN_SHOWEXTRACTREQ,
    TAGID_MAIN_CHECKXCMD,

    TAGID_XAD_NOEXTXADCLIENTS,

    TAGID_TB_APPEARANCE,
    TAGID_TB_SUNNY,
    TAGID_TB_RAISED,
    TAGID_TB_BORDERLESS,
    TAGID_TB_SMALL,

    TAGID_MAIN_DOEXECHECK,
    TAGID_MAIN_AUTOENTERTARS,
    TAGID_MAIN_DELLINGERINGTEMPS,
    TAGID_MAIN_VIEWCOLUMNS,
    TAGID_MAIN_LEAVEPROGRESSOPEN,

    TAGID_MAX
};

/*
 * Config Tag Types
 * ----------------
 *
 * TAGTYPE_BOOL   - The tag will contain either "YES" or "NO". Which
 *                  will be converted into TRUE or FALSE. Very similar to
 *                  TAGTYPE_SYMBOL.
 *
 * TAGTYPE_STRING - The tag will contain a string.
 *
 * TAGTYPE_SYMBOL - The tag will contain a string that is converted into
 *                  a value. ConfigTag->ct_SymMap will point to an
 *                  array of struct SymMaps. Each entry maps a human
 *                  readable symbol string to an internal value used by
 *                  the program.
 *
 * TAGTYPE_VAL    - The tag will contain a value, that will be converted
 *                  into a ULONG. For example "0x12345678".
 *
 */

enum
{
    TAGTYPE_BOOL = 1, TAGTYPE_STRING, TAGTYPE_SYMBOL, TAGTYPE_VAL
};

#define CFG_ID     "VXCONFIG"
#define CFG_NAME   "ENVARC:VX/VX.settings"

#define CFG_HEADER                       \
	CFG_ID "\n#\n"                       \
	"# Do not edit this file by hand!\n" \
	"#\n"                                \
	"GENERATER=" VERS "\n"

extern struct ConfigTag CTArray[];

#define CFG_Get(TagID) CTArray[TagID].ct_TagData

#ifndef VX_CFG_PROTOS_H
#include "vx_cfg_protos.h"
#endif

#endif /* VX_CFG_H */
